# Generated by nginxconfig.io
# https://www.reg.ru/web-tools/nginx-config-generator?domains.0.server.domain=%D0%BF%D1%80%D0%B5%D0%B4%D0%BF%D1%80%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80.%D1%80%D1%84&domains.0.server.listenIpv4=95.163.237.10&domains.0.server.listenIpv6=2a00%3Af940%3A2%3A4%3A2%3A%3A589b&domains.0.https.hstsPreload=true&domains.0.https.certType=custom&domains.0.https.letsEncryptEmail=a.s.plotnikov85%40gmail.com&domains.0.https.sslCertificate=%2Fetc%2Fnginx%2Fssl%2F%D0%BF%D1%80%D0%B5%D0%B4%D0%BF%D1%80%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80.%D1%80%D1%84.crt&domains.0.https.sslCertificateKey=%2Fetc%2Fnginx%2Fssl%2F%D0%BF%D1%80%D0%B5%D0%B4%D0%BF%D1%80%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80.%D1%80%D1%84.key&domains.0.php.php=false&domains.0.python.python=true&domains.0.python.djangoRules=true&domains.0.routing.root=false&domains.0.logging.accessLog=true&domains.0.logging.errorLog=true&domains.0.restrict.putMethod=true&domains.0.restrict.patchMethod=true&domains.0.restrict.deleteMethod=true&domains.0.restrict.headMethod=true&domains.0.restrict.connectMethod=true&domains.0.restrict.optionsMethod=true&domains.0.restrict.traceMethod=true&global.https.ocspCloudflareType=both&global.https.ocspGoogleType=both&global.https.ocspOpenDnsType=both&global.security.limitReq=true&global.logging.logNotFound=true&global.logging.cloudflare=true&global.logging.trueClientIp=true&global.nginx.user=nginx&global.nginx.pid=%2Fvar%2Frun%2Fnginx.pid&global.nginx.clientMaxBodySize=32&global.docker.dockerfile=true&global.docker.dockerCompose=true&global.tools.modularizedStructure=false

user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

# Load modules
include              /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   32M;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Log Format
    log_format             cloudflare '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $http_cf_ray $http_cf_connecting_ip $http_true_client_ip';

    # Logging
    access_log             /var/log/nginx/access.log cloudflare;
    error_log              /var/log/nginx/error.log warn;

    # Limits
    limit_req_log_level    warn;
    limit_req_zone         $binary_remote_addr zone=login:10m rate=10r/m;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam            /etc/nginx/dhparam.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] 8.8.8.8 8.8.4.4 [2001:4860:4860::8888] [2001:4860:4860::8844] 208.67.222.222 208.67.220.220 [2620:119:35::35] [2620:119:53::53] valid=60s;
    resolver_timeout       2s;

    # Load configs
    include                /etc/nginx/conf.d/*.conf;

    # ?@54?@>A<>B@.@D
    server {
        listen                               95.163.237.10:443 ssl http2;
        listen                               [2a00:f940:2:4:2::589b]:443 ssl http2;
        server_name                          ?@54?@>A<>B@.@D;
        set                                  $base /var/www/?@54?@>A<>B@.@D;

        # SSL
        ssl_certificate                      /etc/nginx/ssl/?@54?@>A<>B@.@D.crt;
        ssl_certificate_key                  /etc/nginx/ssl/?@54?@>A<>B@.@D.key;

        # security headers
        add_header X-Frame-Options           "SAMEORIGIN" always;
        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # . files
        location ~ /\.(?!well-known) {
            deny all;
        }

        # restrict methods
        if ($request_method !~ ^(GET|POST)$) {
            return '405';
        }

        # logging
        access_log /var/log/nginx/?@54?@>A<>B@.@D.access.log cloudflare;
        error_log  /var/log/nginx/?@54?@>A<>B@.@D.error.log warn;

        location / {

            # default uwsgi_params
            include                       uwsgi_params;

            # uwsgi settings
            uwsgi_pass                    unix:/tmp/uwsgi.sock;
            uwsgi_param Host              $host;
            uwsgi_param X-Real-IP         $remote_addr;
            uwsgi_param X-Forwarded-For   $proxy_add_x_forwarded_for;
            uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
        }

        # Django media
        location /media/ {
            alias $base/media/;
        }

        # Django static
        location /static/ {
            alias $base/static/;
        }

        # favicon.ico
        location = /favicon.ico {
            log_not_found off;
            access_log    off;
        }

        # robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log    off;
        }

        # gzip
        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 6;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
    }

    # subdomains redirect
    server {
        listen              95.163.237.10:443 ssl http2;
        listen              [2a00:f940:2:4:2::589b]:443 ssl http2;
        server_name         *.?@54?@>A<>B@.@D;

        # SSL
        ssl_certificate     /etc/nginx/ssl/?@54?@>A<>B@.@D.crt;
        ssl_certificate_key /etc/nginx/ssl/?@54?@>A<>B@.@D.key;
        return              301 https://?@54?@>A<>B@.@D$request_uri;
    }

    # HTTP redirect
    server {
        listen      95.163.237.10:80;
        listen      [2a00:f940:2:4:2::589b]:80;
        server_name .?@54?@>A<>B@.@D;
        return      301 https://?@54?@>A<>B@.@D$request_uri;
    }
}